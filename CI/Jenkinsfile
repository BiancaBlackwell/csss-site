pipeline {
    agent any
    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    }
    stages {
        stage('Validate Formatting') {
            steps {
                sh label: '', script: """bash -c \'
                    ./csss-site/test/lineEndings.sh
                    export ENVIRONMENT=TEST;
                    export COMPOSE_PROJECT_NAME=TEST_WEBSITE_${BRANCH_NAME};

                    export CONTAINER_HOME_DIR=/usr/src/app;
                    export CONTAINER_TEST_DIR=\${CONTAINER_HOME_DIR}/tests;
                    export CONTAINER_SRC_DIR=\${CONTAINER_HOME_DIR}/src;

                    export LOCALHOST_SRC_DIR=${WORKSPACE}/website/src/;
                    export LOCALHOST_TEST_DIR=test_results;
                    export TEST_RESULT_FILE_NAME=all-unit-tests.xml;
                    export LOCALHOST_TEST_DIR=${WORKSPACE}/\${LOCALHOST_TEST_DIR};

                    export DOCKER_TEST_IMAGE=\${COMPOSE_PROJECT_NAME}_website_pytest;
                    export DOCKER_TEST_CONTAINER=\${COMPOSE_PROJECT_NAME}_pytest;
                    ./CI/validate-formatting.sh;
                \'"""
            }
        }
        stage('Deploy to Server') {
            when {
                branch 'master'
            }
            steps {
                withCredentials(
                    [
                        string(credentialsId: 'WEBSITE_SECRET_KEY', variable: 'WEBSITE_SECRET_KEY'),
                        string(credentialsId: 'WEBSITE_DB_PASSWORD', variable: 'WEBSITE_DB_PASSWORD'),
                        string(credentialsId: 'STRIPE_PUBLISHABLE_KEY', variable: 'STRIPE_PUBLISHABLE_KEY'),
                        string(credentialsId: 'STRIPE_SECRET_KEY', variable: 'STRIPE_SECRET_KEY')
                    ]
                ) {
                    sh label: '', script: """bash -c \'
                        export BASE_DIR=/home/csss;
                        export SECRET_KEY="${WEBSITE_SECRET_KEY}";
                        export DEBUG=false;
                        export HOST_ADDRESS=sfucsss.org;
                        export DB_PASSWORD=${WEBSITE_DB_PASSWORD};

                        ./CI/deploy_to_prod_server.sh
                    \'"""
                }
            }
        }
    }
    post {
      always {
          script {
              if (fileExists('test_results/all-unit-tests.xml')){
                  junit 'test_results/all-unit-tests.xml'
              }
          }
      }
  }
}
